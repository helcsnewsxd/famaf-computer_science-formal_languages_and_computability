#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Combo 6
\end_layout

\begin_layout Section
Lema 11:
 Efectivamente computable implica efectivamente enumerable
\end_layout

\begin_layout Subsection
Enunciado
\end_layout

\begin_layout Standard

\lang english
Si 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{\ast m}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable entonces 
\begin_inset Formula $S$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente enumerable.
\end_layout

\begin_layout Subsection
Demostraci칩n
\end_layout

\begin_layout Standard
El caso 
\begin_inset Formula $S=\emptyset$
\end_inset

 es trivial.
 
\lang english
Supongamos 
\begin_inset Formula $S\neq\emptyset$
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
Sea 
\begin_inset Formula $(\vec{z},\vec{\gamma})\in S$
\end_inset

,
 fijo.
 Sea 
\begin_inset Formula $\mathbb{P}$
\end_inset

 un procedimiento efectivo que compute a 
\begin_inset Formula $\chi_{S}^{\omega^{n}\times\Sigma^{\ast m}}$
\end_inset

.
 Sea 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 un procedimiento efectivo que enumere a 
\begin_inset Formula $\omega^{n}\times\Sigma^{\ast m}$
\end_inset

.
 Entonces el siguiente procedimiento 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 enumera a 
\begin_inset Formula $S$
\end_inset

:
\end_layout

\begin_layout Description

\lang english
Etapa1 Realizar 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 con 
\begin_inset Formula $x$
\end_inset

 de entrada para obtener como salida un 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in\omega^{n}\times\Sigma^{\ast m}$
\end_inset

.
\end_layout

\begin_layout Description

\lang english
Etapa2 Realizar 
\begin_inset Formula $\mathbb{P}$
\end_inset

 con 
\begin_inset Formula $(\vec{x},\vec{\alpha})$
\end_inset

 de entrada para obtener el valor Booleano 
\begin_inset Formula $e$
\end_inset

 de salida.
\end_layout

\begin_layout Description

\lang english
Etapa3 Si 
\begin_inset Formula $e=1$
\end_inset

 dar como dato de salida 
\begin_inset Formula $(\vec{x},\vec{\alpha}).$
\end_inset

 Si 
\begin_inset Formula $e=0$
\end_inset

 dar como dato de salida 
\begin_inset Formula $(\vec{z},\vec{\gamma})$
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
Luego,
 solo nos queda demostrar que 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 enumera a 
\begin_inset Formula $S$
\end_inset

.
 Para ello,
 por lema sabemos que se tiene que cumplir que:
\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(1)
\end_layout

\end_inset

El conjunto de datos de entrada de 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 es 
\begin_inset Formula $\omega$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(2)
\end_layout

\end_inset


\begin_inset Formula $\mathbb{Q}$
\end_inset

 se detiene para cada 
\begin_inset Formula $x\in\omega$
\end_inset


\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(3)
\end_layout

\end_inset

El conjunto de datos de salida de 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 es igual a 
\begin_inset Formula $S$
\end_inset

.
 (Es decir,
 siempre que 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 se detiene,
 da como salida un elemento de 
\begin_inset Formula $S$
\end_inset

,
 y para cada elemento 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in S$
\end_inset

,
 hay un 
\begin_inset Formula $x\in\omega$
\end_inset

 tal que 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 da como salida a 
\begin_inset Formula $(\vec{x},\vec{\alpha})$
\end_inset

 cuando lo corremos con 
\begin_inset Formula $x$
\end_inset

 como dato de entrada) 
\end_layout

\begin_layout Standard

\lang english
Veamos cada punto:
\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(1)
\end_layout

\end_inset

 Es trivial de ver.
\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(2)
\end_layout

\end_inset

 Es trivial de ver dado que 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 y 
\begin_inset Formula $\mathbb{P}$
\end_inset

 siempre se detienen.
\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(3)
\end_layout

\end_inset

 Para este punto,
 tenemos que ver los dos casos:
\end_layout

\begin_deeper
\begin_layout Enumerate

\lang english
Sea 
\begin_inset Formula $x\in\omega$
\end_inset

,
 entonces 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 se detiene y da como salida 
\begin_inset Formula $s\in S$
\end_inset

 cuando se corre con 
\begin_inset Formula $x$
\end_inset

 como entrada:
 Esto se puede comprobar notando que si se devuelve 
\begin_inset Formula $(\vec{x},\vec{\alpha})$
\end_inset

,
 entonces 
\begin_inset Formula $e=1$
\end_inset

,
 lo que significa que 
\begin_inset Formula $\chi_{S}^{\omega^{n}\times\Sigma^{\ast m}}((\vec{x},\vec{a}))=1$
\end_inset

,
 lo que implica que 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in S$
\end_inset

.
 Caso contrario,
 se da como salida 
\begin_inset Formula $(\vec{z},\vec{\gamma})$
\end_inset

,
 el cual est치 en 
\begin_inset Formula $S$
\end_inset

 por c칩mo lo definimos.
\end_layout

\begin_layout Enumerate

\lang english
Sea 
\begin_inset Formula $s\in S,\exists x\in\omega$
\end_inset

 tal que 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 da como salida a 
\begin_inset Formula $s$
\end_inset

 cuando lo corremos con 
\begin_inset Formula $x$
\end_inset

 como dato de entrada:
 Como 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 enumera a 
\begin_inset Formula $\omega^{n}\times\Sigma^{\ast m}$
\end_inset

,
 entonces 
\begin_inset Formula $\exists y\in\omega$
\end_inset

 tal que 
\begin_inset Formula $\mathbb{P}_{1}$
\end_inset

 se detiene y da como salida 
\begin_inset Formula $s$
\end_inset

 cuando se corre con 
\begin_inset Formula $y$
\end_inset

 como dato de entrada.
 Luego,
 es claro notar que si se corre 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 con 
\begin_inset Formula $y$
\end_inset

 como dato de entrada,
 
\begin_inset Formula $e=1$
\end_inset

 y,
 por lo tanto,
 se detiene y devuelve 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard

\lang english
Luego,
 entonces,
 por Lema tenemos que 
\begin_inset Formula $\mathbb{Q}$
\end_inset

 enumera a 
\begin_inset Formula $S$
\end_inset

,
 por lo que 
\begin_inset Formula $S$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente enumerable.
 
\begin_inset Formula $\blacksquare$
\end_inset


\end_layout

\begin_layout Section
Teorema 12 (Caracterizaci칩n de conjuntos r.e.)
\end_layout

\begin_layout Subsection
Enunciado
\end_layout

\begin_layout Standard

\lang english
Dado 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{\ast m}$
\end_inset

,
 son equivalentes
\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(1)
\end_layout

\end_inset


\begin_inset Formula $S$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-recursivamente enumerable
\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(2)
\end_layout

\end_inset


\begin_inset Formula $S=I_{F}$
\end_inset

,
 para alguna 
\begin_inset Formula $F:D_{F}\subseteq\omega^{k}\times\Sigma^{\ast l}\rightarrow\omega^{n}\times\Sigma^{\ast m}$
\end_inset

 tal que cada 
\begin_inset Formula $F_{(i)}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-recursiva.
\end_layout

\begin_layout Enumerate

\lang english
\begin_inset Argument item:1
status collapsed

\begin_layout Plain Layout

\lang english
(3)
\end_layout

\end_inset


\begin_inset Formula $S=D_{f}$
\end_inset

,
 para alguna funcion 
\begin_inset Formula $\Sigma$
\end_inset

-recursiva 
\begin_inset Formula $f$
\end_inset


\end_layout

\begin_layout Standard

\lang english
Nota:
 haga solo la prueba de 
\begin_inset Formula $(2)\Rightarrow(3)$
\end_inset

,
 caso 
\begin_inset Formula $k=l=1$
\end_inset

 y 
\begin_inset Formula $n=m=2$
\end_inset

.
\end_layout

\begin_layout Subsection
Demostraci칩n de 
\begin_inset Formula $(2)\Rightarrow(3)$
\end_inset

 con 
\begin_inset Formula $k=l=1$
\end_inset

 y 
\begin_inset Formula $n=m=2$
\end_inset


\end_layout

\begin_layout Standard

\lang english
Tenemos que 
\begin_inset Formula $S\subseteq\omega^{2}\times\Sigma^{\ast2}$
\end_inset

 y 
\begin_inset Formula $F:D_{F}\subseteq\omega\times\Sigma^{\ast}\rightarrow\omega^{2}\times\Sigma^{\ast2}$
\end_inset

 es tal que 
\begin_inset Formula $I_{F}=S$
\end_inset

 y 
\begin_inset Formula $F_{(1)}$
\end_inset

,
 
\begin_inset Formula $F_{(2)}$
\end_inset

,
 
\begin_inset Formula $F_{(3)}$
\end_inset

,
 
\begin_inset Formula $F_{(4)}$
\end_inset

 son 
\begin_inset Formula $\Sigma$
\end_inset

-recursivas.
 Para cada 
\begin_inset Formula $i\in\{1,2,3,4\}$
\end_inset

,
 sea 
\begin_inset Formula $\mathcal{P}_{i}$
\end_inset

 un programa el cual computa a 
\begin_inset Formula $F_{(i)}$
\end_inset

.
 Sea 
\begin_inset Formula $\leq$
\end_inset

 un orden total sobre 
\begin_inset Formula $\Sigma$
\end_inset

.
 Definamos
\begin_inset Formula 
\[
H_{i}=\lambda tx_{1}\alpha_{1}\left[\lnot Halt^{1,1}(t,x_{1},\alpha_{1},\mathcal{P}_{i})\right]
\]

\end_inset

Notar que 
\begin_inset Formula $D_{H_{i}}=\omega^{2}\times\Sigma^{\ast}$
\end_inset

 y que 
\begin_inset Formula $H_{i}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-mixta.
 Ademas sabemos que la funcion 
\begin_inset Formula $Halt^{1,1}$
\end_inset

 es 
\begin_inset Formula $(\Sigma\cup\Sigma_{p})$
\end_inset

-p.r.
 por lo cual resulta facilmente que 
\begin_inset Formula $H_{i}$
\end_inset

 es 
\begin_inset Formula $(\Sigma\cup\Sigma_{p})$
\end_inset

-p.r..
 Por la Proposicion de Independencia del Alfabeto tenemos que 
\begin_inset Formula $H_{i}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-p.r..
 Entonces 
\begin_inset Formula $H_{i}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-computable por lo cual tenemos que hay un macro:
\begin_inset Formula 
\[
\left[\mathrm{IF}\;H_{i}(\mathrm{V}2,\mathrm{V}1,\mathrm{W}1)\;\mathrm{GOTO}\;\mathrm{A}1\right]
\]

\end_inset

Para hacer mas intuitivo el uso de este macro lo escribiremos de la siguiente manera
\begin_inset Formula 
\[
\left[\mathrm{IF}\;\lnot Halt^{1,1}(\mathrm{V}2,\mathrm{V}1,\mathrm{W}1,\mathcal{P}_{i})\;\mathrm{GOTO}\;\mathrm{A}1\right]
\]

\end_inset

Para 
\begin_inset Formula $i=1,2$
\end_inset

,
 definamos
\begin_inset Formula 
\[
E_{i}=\lambda xtx_{1}\alpha_{1}\left[x\neq E_{\#1}^{1,1}(t,x_{1},\alpha_{1},\mathcal{P}_{i})\right]
\]

\end_inset

Para 
\begin_inset Formula $i=3,4$
\end_inset

,
 definamos
\begin_inset Formula 
\[
E_{i}=\lambda tx_{1}\alpha_{1}\alpha\left[\alpha\neq E_{\ast1}^{1,1}(t,x_{1},\alpha_{1},\mathcal{P}_{i})\right]
\]

\end_inset

Como estas son iguales a:
\end_layout

\begin_layout Standard

\lang english
\begin_inset Formula 
\[
E_{i}=\lambda xy\left[x\neq y\right]\circ\left[p_{1}^{3,1},E_{\#1}^{1,1}\circ\left[p_{2}^{3,1},p_{3}^{3,1},p_{4}^{3,1},C_{\mathcal{P}_{i}}^{3,1}\right]\right]
\]

\end_inset


\begin_inset Formula 
\[
E_{i}=\lambda\alpha\beta\left[\alpha\neq\beta\right]\circ\left[p_{4}^{2,2},E_{*1}^{1,1}\circ\left[p_{1}^{2,2},p_{2}^{2,2},p_{3}^{2,2},C_{\mathcal{P}_{i}}^{2,2}\right]\right]
\]

\end_inset


\end_layout

\begin_layout Standard

\lang english
Y como 
\begin_inset Formula $E_{\#1}^{1,1}$
\end_inset

,
 
\begin_inset Formula $E_{*1}^{1,1}$
\end_inset

,
 
\begin_inset Formula $C_{\mathcal{P}_{i}}^{3,1}$
\end_inset

 y 
\begin_inset Formula $C_{\mathcal{P}_{i}}^{2,2}$
\end_inset

 son 
\begin_inset Formula $(\Sigma\cup\Sigma_{p})$
\end_inset

-p.r.,
 tenemos que las funciones 
\begin_inset Formula $E_{i}$
\end_inset

 son 
\begin_inset Formula $(\Sigma\cup\Sigma_{p})$
\end_inset

-p.r..
 Ahora,
 por independencia del alfabeto,
 tenemos que son 
\begin_inset Formula $\Sigma$
\end_inset

-p.r..
 Esto significa que son 
\begin_inset Formula $\Sigma$
\end_inset

-computables por lo cual para cada 
\begin_inset Formula $i\in\{1,2\}$
\end_inset

 hay un macro
\begin_inset Formula 
\[
\left[\mathrm{IF}\;E_{i}(\mathrm{V}2,\mathrm{V}3,\mathrm{V}1,\mathrm{W}1)\;\mathrm{GOTO}\;\mathrm{A}1\right]
\]

\end_inset

y para cada 
\begin_inset Formula $i\in\{3,4\}$
\end_inset

 hay un macro
\begin_inset Formula 
\[
\left[\mathrm{IF}\;E_{i}(\mathrm{V}2,\mathrm{V}1,\mathrm{W}1,\mathrm{W}2)\;\mathrm{GOTO}\;\mathrm{A}1\right]
\]

\end_inset

Haremos mas intuitiva la forma de escribir estos macros,
 por ejemplo para 
\begin_inset Formula $i=1$
\end_inset

,
 lo escribiremos de la siguiente manera
\begin_inset Formula 
\[
\left[\mathrm{IF}\;\mathrm{V}2\neq E_{\#1}^{1,1}(\mathrm{V}3,\mathrm{V}1,\mathrm{W}1,\mathcal{P}_{1})\;\mathrm{GOTO}\;\mathrm{A}1\right]
\]

\end_inset

Ya que la funcion 
\begin_inset Formula $f=\lambda x[(x)_{1}]$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-p.r.,
 ella es 
\begin_inset Formula $\Sigma$
\end_inset

-computable por lo cual hay un macro
\begin_inset Formula 
\[
\lbrack\mathrm{V}2\leftarrow f(\mathrm{V}1)]
\]

\end_inset

el cual escribiremos de la siguiente manera:
\begin_inset Formula 
\[
\lbrack\mathrm{V}2\leftarrow(\mathrm{V}1)_{1}]
\]

\end_inset

Similarmente hay macros:
\begin_inset Formula 
\[
\lbrack\mathrm{W}1\leftarrow\ast^{\leq}(\mathrm{V}1)_{3}]
\]

\end_inset


\begin_inset Formula 
\[
\lbrack\mathrm{V}2\leftarrow(\mathrm{V}1)_{2}]
\]

\end_inset

Sea 
\begin_inset Formula $\mathcal{P}$
\end_inset

 el siguiente programa de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset

:
\begin_inset Formula 
\[
\begin{array}{l}
\mathrm{L}1\ \mathrm{N}20\leftarrow\mathrm{N}20+1\\
\lbrack\mathrm{N}10\leftarrow(\mathrm{N}20)_{1}]\\
\lbrack\mathrm{N}3\leftarrow(\mathrm{N}20)_{2}]\\
\lbrack\mathrm{P}3\leftarrow\ast^{\leq}(\mathrm{N}20)_{3}]\\
\left[\mathrm{IF}\;\lnot Halt^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{1})\;\mathrm{GOTO}\;\mathrm{L}1\right]\\
\left[\mathrm{IF}\;\lnot Halt^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{2})\;\mathrm{GOTO}\;\mathrm{L}1\right]\\
\left[\mathrm{IF}\;\lnot Halt^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{3})\;\mathrm{GOTO}\;\mathrm{L}1\right]\\
\left[\mathrm{IF}\;\lnot Halt^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{4})\;\mathrm{GOTO}\;\mathrm{L}1\right]\\
\left[\mathrm{IF}\;\mathrm{N}1\neq E_{\#1}^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{1})\;\mathrm{GOTO}\;\mathrm{L}1\right]\\
\left[\mathrm{IF}\;\mathrm{N}2\neq E_{\#1}^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{2})\;\mathrm{GOTO}\;\mathrm{L}1\right]\\
\left[\mathrm{IF}\;\mathrm{P}1\neq E_{\ast1}^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{3})\;\mathrm{GOTO}\;\mathrm{L}1\right]\\
\left[\mathrm{IF}\;\mathrm{P}2\neq E_{\ast1}^{1,1}(\mathrm{N}10,\mathrm{N}3,\mathrm{P}3,\mathcal{P}_{4})\;\mathrm{GOTO}\;\mathrm{L}1\right]
\end{array}
\]

\end_inset

Tenemos que demostrar que este programa computa a 
\begin_inset Formula $p_{1}^{2,2}|_{S}$
\end_inset

,
 lo que es equivalente a demostrar que 
\begin_inset Formula $p_{1}^{2,2}|_{S}=\Psi_{\mathcal{P}}^{2,2,\#}$
\end_inset

,
 Para ello,
 veamos los casos:
\end_layout

\begin_layout Itemize

\lang english
\begin_inset Formula $D_{p_{1}^{2,2}|_{S}}=D_{\Psi_{\mathcal{P}}^{2,2,\#}}$
\end_inset

:
 Es f치cil de ver notando que 
\begin_inset Formula $D_{p_{1}^{2,2}|_{S}}=S$
\end_inset

 por la clausura y 
\begin_inset Formula $D_{\Psi_{\mathcal{P}}^{2,2,\#}}=S$
\end_inset

 dado que,
 en otro caso,
 no se detiene porque 
\begin_inset Formula $\mathcal{P}_{i}$
\end_inset

 computa 
\begin_inset Formula $F_{(i)}$
\end_inset

 y siempre alg칰n predicado dar칤a 
\begin_inset Formula $1$
\end_inset

 (Halt).
\end_layout

\begin_layout Itemize

\lang english
\begin_inset Formula $\forall(x,y,\alpha,\beta)\in S,p_{1}^{2,2}|_{S}((x,y,\alpha,\beta))=\Psi_{\mathcal{P}}^{2,2,\#}((x,y,\alpha,\beta))$
\end_inset

:
 Claramente 
\begin_inset Formula $p_{1}^{2,2}|_{S}((x,y,\alpha,\beta))=x$
\end_inset

,
 por lo que se reduce a comprobar que 
\begin_inset Formula $\Psi_{\mathcal{P}}^{2,2,\#}((x,y,\alpha,\beta))=x$
\end_inset

.
 Para ello,
 nos concentremos en el programa 
\begin_inset Formula $\mathcal{P}$
\end_inset

.
 Como 
\begin_inset Formula $(x,y,\alpha,\beta)\in S$
\end_inset

,
 entonces sabemos que 
\begin_inset Formula $\exists k\in N:F((k)_{1},*^{\leq}(k)_{2})=(x,y,\alpha,\beta)$
\end_inset

,
 Digamos,
 ahora,
 que con 
\begin_inset Formula $p$
\end_inset

 pasos todos los programas 
\begin_inset Formula $\mathcal{P}_{i}$
\end_inset

 se detuvieron para el estado inicial 
\begin_inset Formula $||(k)_{1},*^{\leq}(k)_{2}||$
\end_inset

,
 entonces se puede notar que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene y el valor almacenado en N1 ser치 
\begin_inset Formula $x$
\end_inset

 para el estado inicial 
\begin_inset Formula $||2^{p}3^{(k)_{1}}5^{(k)_{2}}||$
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
Luego,
 se demuestra que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 computa a 
\begin_inset Formula $p_{1}^{2,2}|_{S}$
\end_inset

,
 por lo que es 
\begin_inset Formula $\Sigma$
\end_inset

-computable.
 Esto implica que es 
\begin_inset Formula $\Sigma$
\end_inset

-recursiva,
 lo cual prueba (3) dado que 
\begin_inset Formula $Dom(p_{1}^{2,2}|_{S})=S$
\end_inset

.
 
\begin_inset Formula $\blacksquare$
\end_inset


\end_layout

\end_body
\end_document
