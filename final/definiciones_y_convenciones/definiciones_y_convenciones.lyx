#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
% Options for packages loaded elsewhere


%
\usepackage{iftex}
\ifPDFTeX
  \usepackage{textcomp}% provide euro and other symbols
\else % if luatex or xetex
  \usepackage{unicode-math}% this also loads fontspec
  \defaultfontfeatures{Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
\fi
\ifPDFTeX\else
  % xetex/luatex font selection
\fi
% Use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\IfFileExists{microtype.sty}{% use microtype if available
  \usepackage[]{microtype}
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}

\@ifundefined{KOMAClassName}{% if non-KOMA class
  \IfFileExists{parskip.sty}{%
    \usepackage{parskip}
  }{% else
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}}
}{% if KOMA class
  \KOMAoptions{parskip=half}}

\usepackage{xcolor}
\setlength{\emergencystretch}{3em} % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
 % remove section numbering
\usepackage{bookmark}
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\urlstyle{same}


\author{}
\end_preamble
\use_default_options false
\maintain_unincluded_children no
\language english
\language_package none
\inputencoding utf8
\fontencoding T1
\font_roman "lmodern" "default"
\font_sans "default" "default"
\font_typewriter "lmodern" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle false
\pdf_quoted_options "hidelinks,pdfcreator={LaTeX via pandoc}"
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth -1
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Section
Definiciones y convenciones notacionales
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "definiciones-y-convenciones-notacionales"

\end_inset


\end_layout

\begin_layout Subsection
Combo 1
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-1"

\end_inset


\end_layout

\begin_layout Standard
Defina:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\newcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Cuándo un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es llamado 
\begin_inset Formula $\Sigma$
\end_inset

-recursivo (no hace falta que defina 
\begin_inset Quotes eld
\end_inset

función 
\begin_inset Formula $\Sigma$
\end_inset

-recursiva
\begin_inset Quotes erd
\end_inset

) 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\langle s_{1},s_{2},...\rangle$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $f$
\end_inset

 es una función 
\begin_inset Formula $\Sigma$
\end_inset

-mixta
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

familia 
\begin_inset Formula $\Sigma$
\end_inset

-indexada de funciones
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $R(f,\mathcal{G})$
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-recursivo si su función característica 
\begin_inset Formula $\chi_{S}^{\omega^{n}\times\Sigma^{*m}}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-recursiva.
 
\end_layout

\begin_layout Enumerate
Dada una infinitupla 
\begin_inset Formula $(s_{1},s_{2},...)\in\omega^{[N]}$
\end_inset

,
 se usa 
\begin_inset Formula $\langle s_{1},s_{2},...\rangle$
\end_inset

 para denotar al número 
\begin_inset Formula $x=\prod_{i=1}^{\infty}pr(i)^{s_{i}}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Sea 
\begin_inset Formula $\Sigma$
\end_inset

 un alfabeto finito y sea 
\begin_inset Formula $f$
\end_inset

 una función,
 diremos que es 
\begin_inset Formula $\Sigma$
\end_inset

-mixta si 
\begin_inset Formula $\exists n,m\geq0:D_{f}\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 e 
\begin_inset Formula $I_{f}\subseteq O$
\end_inset

 donde 
\begin_inset Formula $O\in\{\omega,\Sigma^{*}\}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Dado un alfabeto 
\begin_inset Formula $\Sigma$
\end_inset

,
 una familia 
\begin_inset Formula $\Sigma$
\end_inset

-indexada de funciones es una función 
\begin_inset Formula $\mathcal{G}$
\end_inset

 tal que 
\begin_inset Formula $D_{\mathcal{G}}=\Sigma$
\end_inset

 y 
\begin_inset Formula $\forall a\in D_{\mathcal{G}}$
\end_inset

,
 
\begin_inset Formula $\mathcal{G}(a)$
\end_inset

 es una función.
 
\end_layout

\begin_layout Enumerate
La recursión primitiva para el caso de 
\emph on
variable alfabética
\emph default
 se define de forma distinta para los casos de 
\emph on
valores numéricos
\emph default
 o 
\emph on
alfabéticos
\emph default
.
 Por ello,
 veamos cada uno:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\series bold
Valores numéricos
\series default
:
 Sea 
\begin_inset Formula $\Sigma$
\end_inset

 un alfabeto finito,
 y sean 
\begin_inset Formula $f$
\end_inset

 una función y 
\begin_inset Formula $\mathcal{G}$
\end_inset

 una familia 
\begin_inset Formula $\Sigma$
\end_inset

-indexada de funciones tales que:
 
\begin_inset Formula 
\[
\begin{aligned}f & :S_{1}\times...\times S_{n}\times L_{1}\times...\times L_{m}\to\omega\\
\\\mathcal{G}_{a} & :\omega\times S_{1}\times...\times S_{n}\times L_{1}\times...\times L_{m}\times\Sigma^{*}\to\omega
\end{aligned}
\]

\end_inset

para cada 
\begin_inset Formula $a\in\Sigma$
\end_inset

,
 y con 
\begin_inset Formula $S_{i}\subseteq\omega$
\end_inset

 y 
\begin_inset Formula $L_{i}\subseteq\Sigma^{*}$
\end_inset

 conjuntos no vacíos,
 entonces definimos 
\begin_inset Formula 
\[
\begin{aligned}R(f,\mathcal{G}) & :S_{1}\times...\times S_{n}\times L_{1}\times...\times L_{m}\times\Sigma^{*}\to\omega\\
\\R(f,\mathcal{G})(\vec{x},\vec{\alpha},\varepsilon) & =f(\vec{x},\vec{\alpha})\\
\\R(f,\mathcal{G})(\vec{x},\vec{\alpha},\alpha a) & =\mathcal{G}_{a}(R(f,\mathcal{G})(\vec{x},\vec{\alpha},\alpha),\vec{x},\vec{\alpha},\alpha)
\end{aligned}
\]

\end_inset

y decimos que 
\begin_inset Formula $R(f,\mathcal{G})$
\end_inset

 es obtenida por recursión primitiva a partir de 
\begin_inset Formula $f$
\end_inset

 y 
\begin_inset Formula $\mathcal{G}$
\end_inset

.
 
\end_layout

\begin_layout Itemize

\series bold
Valores alfabéticos
\series default
:
 Sea 
\begin_inset Formula $\Sigma$
\end_inset

 un alfabeto finito,
 y sean 
\begin_inset Formula $f$
\end_inset

 una función y 
\begin_inset Formula $\mathcal{G}$
\end_inset

 una familia 
\begin_inset Formula $\Sigma$
\end_inset

-indexada de funciones tales que:
 
\begin_inset Formula 
\[
\begin{aligned}f & :S_{1}\times...\times S_{n}\times L_{1}\times...\times L_{m}\to\Sigma^{*}\\
\\\mathcal{G}_{a} & :S_{1}\times...\times S_{n}\times L_{1}\times...\times L_{m}\times\Sigma^{*}\times\Sigma^{*}\to\Sigma^{*}
\end{aligned}
\]

\end_inset

para cada 
\begin_inset Formula $a\in\Sigma$
\end_inset

,
 y con 
\begin_inset Formula $S_{i}\subseteq\omega$
\end_inset

 y 
\begin_inset Formula $L_{i}\subseteq\Sigma^{*}$
\end_inset

 conjuntos no vacíos,
 entonces definimos 
\begin_inset Formula 
\[
\begin{aligned}R(f,\mathcal{G}) & :S_{1}\times...\times S_{n}\times L_{1}\times...\times L_{m}\times\Sigma^{*}\to\Sigma^{*}\\
\\R(f,\mathcal{G})(\vec{x},\vec{\alpha},\varepsilon) & =f(\vec{x},\vec{\alpha})\\
\\R(f,\mathcal{G})(\vec{x},\vec{\alpha},\alpha a) & =\mathcal{G}_{a}(\vec{x},\vec{\alpha},\alpha,R(f,\mathcal{G})(\vec{x},\vec{\alpha},\alpha))
\end{aligned}
\]

\end_inset

y decimos que 
\begin_inset Formula $R(f,\mathcal{G})$
\end_inset

 es obtenida por recursión primitiva a partir de 
\begin_inset Formula $f$
\end_inset

 y 
\begin_inset Formula $\mathcal{G}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Subsection
Combo 2
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-2"

\end_inset


\end_layout

\begin_layout Standard
Defina:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $d\overset{n}{\vdash}d'$
\end_inset

 (no hace falta que defina 
\begin_inset Formula $\vdash$
\end_inset

) 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $L(M)$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $H(M)$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $f$
\end_inset

 es una función de tipo 
\begin_inset Formula $(n,m,s)$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $(x)$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $(x)_{i}$
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-1"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Para 
\begin_inset Formula $d,d'\in Des,n\geq0$
\end_inset

,
 escribiremos 
\begin_inset Formula $d\overset{n}{\vdash}d'$
\end_inset

 si 
\begin_inset Formula $\exists d_{1},...,d_{n+1}$
\end_inset

 tales que 
\begin_inset Formula $d=d_{1},d'=d_{n+1}$
\end_inset

 y 
\begin_inset Formula $d_{i}\vdash d_{i+1}\forall i=1,...,n$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\emph on
Notar que 
\begin_inset Formula $d\overset{0}{\vdash}d'\Leftrightarrow d=d'$
\end_inset


\emph default
 
\end_layout

\end_deeper
\begin_layout Enumerate
Diremos que una palabra 
\begin_inset Formula $\alpha\in\Sigma^{*}$
\end_inset

 es aceptada por 
\begin_inset Formula $M$
\end_inset

 por 
\emph on
alcance de estado final
\emph default
 cuando 
\begin_inset Formula $\lfloor q_{0}B\alpha\rfloor\overset{*}{\vdash}d$
\end_inset

,
 con 
\begin_inset Formula $d:St(d)\in F$
\end_inset

.
 Luego,
 el 
\emph on
lenguaje aceptado por 
\begin_inset Formula $M$
\end_inset

 por alcance de estado final
\emph default
 se define como 
\begin_inset Formula $L(M)=\{\alpha\in\Sigma^{*}:\alpha\text{ es aceptada por }M\text{ por alcance de estado final}\}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Diremos que una palabra 
\begin_inset Formula $\alpha\in\Sigma^{*}$
\end_inset

 es aceptada por 
\begin_inset Formula $M$
\end_inset

 por 
\emph on
detención
\emph default
 cuando 
\begin_inset Formula $M$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $\lfloor q_{0}B\alpha\rfloor$
\end_inset

.
 Luego,
 el 
\emph on
lenguaje aceptado por 
\begin_inset Formula $M$
\end_inset

 por detención
\emph default
 se define como 
\begin_inset Formula $H(M)=\{\alpha\in\Sigma^{*}:\alpha\text{ es aceptada por }M\text{ por detención}\}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Si 
\begin_inset Formula $f$
\end_inset

 es una función 
\begin_inset Formula $\Sigma$
\end_inset

-mixta y 
\begin_inset Formula $n,m\in\omega:D_{f}\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

,
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si 
\begin_inset Formula $I_{f}\subseteq\omega$
\end_inset

,
 decimos que 
\begin_inset Formula $f$
\end_inset

 es de tipo 
\begin_inset Formula $(n,m,\#)$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $I_{f}\subseteq\Sigma^{*}$
\end_inset

,
 decimos que 
\begin_inset Formula $f$
\end_inset

 es de tipo 
\begin_inset Formula $(n,m,*)$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Dado 
\begin_inset Formula $x\in N$
\end_inset

,
 usaremos 
\begin_inset Formula $(x)$
\end_inset

 para denotar a la única infinitupla 
\begin_inset Formula $(s_{1},s_{2},...)\in\omega^{[N]}$
\end_inset

 tal que 
\begin_inset Formula $x=\langle s_{1},s_{2},...\rangle=\prod_{i=1}^{\infty}pr(i)^{s_{i}}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Para cada 
\begin_inset Formula $i\in N$
\end_inset

,
 usaremos 
\begin_inset Formula $(x)_{i}$
\end_inset

 para denotar a 
\begin_inset Formula $s_{i}$
\end_inset

 de la anterior infinitupla.
 Es decir,
 
\begin_inset Formula $(x)_{i}$
\end_inset

 es el exponente de 
\begin_inset Formula $pr(i)$
\end_inset

 en la única factorización prima de 
\begin_inset Formula $x$
\end_inset

 
\end_layout

\begin_layout Subsection
Combo 3
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-3"

\end_inset


\end_layout

\begin_layout Standard
Defina:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Cuándo un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es llamado 
\begin_inset Formula $\Sigma$
\end_inset

-recursivamente enumerable (no hace falta que defina 
\begin_inset Quotes eld
\end_inset

función 
\begin_inset Formula $\Sigma$
\end_inset

-recursiva
\begin_inset Quotes erd
\end_inset

) 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $s^{\leq}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $*^{\leq}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\#^{\leq}$
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-2"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Diremos que un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-recursivamente enumerable cuando sea vacío o haya una función 
\begin_inset Formula $F:\omega\to\omega^{n}\times\Sigma^{*m}$
\end_inset

 tal que 
\begin_inset Formula $I_{F}=S$
\end_inset

 y 
\begin_inset Formula $F_{(i)}$
\end_inset

 sea 
\begin_inset Formula $\Sigma$
\end_inset

-recursiva 
\begin_inset Formula $\forall i\in\{1,...,n+m\}$
\end_inset

 
\end_layout

\begin_layout Standard
Los siguientes puntos se definen en base a 
\begin_inset Formula $\Sigma$
\end_inset

 alfabeto no vacío y 
\begin_inset Formula $\leq$
\end_inset

 orden total sobre 
\begin_inset Formula $\Sigma$
\end_inset

,
 siendo 
\begin_inset Formula $\Sigma=\{a_{1},...,a_{n}\}$
\end_inset

 con 
\begin_inset Formula $a_{1}<a_{2}<...<a_{n}$
\end_inset

.
 Luego:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
setcounter{enumi}{1}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

La función 
\emph on
siguiente
\emph default
 se define como 
\begin_inset Formula 
\[
\begin{aligned}s^{\leq} & :\Sigma^{*}\to\Sigma^{*}\\
\\s^{\leq}((a_{n})^{m}) & =(a_{1})^{m+1}\ \forall m\geq0\\
\\s^{\leq}(\alpha a_{i}(a_{n})^{m}) & =\alpha a_{i+1}(a_{1})^{m}\ \forall\alpha\in\Sigma^{*},\ i\in\{1,...,n-1\},\ m\geq0
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Función que asigna a cada 
\begin_inset Formula $n\in\omega$
\end_inset

 la 
\begin_inset Formula $n+1$
\end_inset

-ésima palabra de la lista:
 
\begin_inset Formula 
\[
\begin{aligned}*^{\leq} & :\omega\to\Sigma^{*}\\
\\*^{\leq}(0) & =\varepsilon\\
\\*^{\leq}(n+1) & =s^{\leq}(*^{\leq}(n))
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Inversa de la anterior:
 
\begin_inset Formula 
\[
\begin{aligned}\#^{\leq} & :\Sigma^{*}\to\omega\\
\\\#^{\leq}(\varepsilon) & =0\\
\\\#^{\leq}(a_{i_{k}}...a_{i_{0}}) & =\sum_{j=0}^{k}i_{j}n^{j}
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Subsection
Combo 4
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-4"

\end_inset


\end_layout

\begin_layout Standard
Defina cuándo una función 
\begin_inset Formula $f:D_{f}\subseteq\omega^{n}\times\Sigma^{*m}\to\omega$
\end_inset

 es llamada 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable y defina 
\begin_inset Quotes eld
\end_inset

el procedimiento 
\begin_inset Formula $\mathbb{P}$
\end_inset

 computa a la función 
\begin_inset Formula $f$
\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-3"

\end_inset


\end_layout

\begin_layout Standard
Una función 
\begin_inset Formula $\Sigma$
\end_inset

-mixta 
\begin_inset Formula $f:D_{f}\subseteq\omega^{n}\times\Sigma^{*m}\to O$
\end_inset

 (para 
\begin_inset Formula $O\in\{\omega,\Sigma^{*}\}$
\end_inset

) es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable si hay un procedimiento 
\begin_inset Formula $\mathbb{P}$
\end_inset

 tal que:
\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

El conjunto de datos de entrada de 
\begin_inset Formula $\mathbb{P}$
\end_inset

 es 
\begin_inset Formula $\omega^{n}\times\Sigma^{*m}$
\end_inset

 
\end_layout

\begin_layout Itemize
El conjunto de datos de salida está contenido en 
\begin_inset Formula $O$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in D_{f}$
\end_inset

,
 entonces 
\begin_inset Formula $\mathbb{P}$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $(\vec{x},\vec{\alpha})$
\end_inset

 y da como salida 
\begin_inset Formula $f(\vec{x},\vec{\alpha})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $(\vec{x},\vec{\alpha})\notin D_{f}$
\end_inset

,
 entonces 
\begin_inset Formula $\mathbb{P}$
\end_inset

 no se detiene partiendo de 
\begin_inset Formula $(\vec{x},\vec{\alpha})$
\end_inset

 
\end_layout

\begin_layout Standard
En estos casos,
 diremos que este 
\begin_inset Formula $\mathbb{P}$
\end_inset

 computa a la función 
\begin_inset Formula $f$
\end_inset

.
\end_layout

\begin_layout Subsection
Combo 5
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-5"

\end_inset


\end_layout

\begin_layout Standard
Defina cuándo un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es llamado 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable y defina 
\begin_inset Quotes eld
\end_inset

el procedimiento efectivo 
\begin_inset Formula $\mathbb{P}$
\end_inset

 decide la pertenencia a 
\begin_inset Formula $S$
\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-4"

\end_inset


\end_layout

\begin_layout Standard
Un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable cuando la función 
\begin_inset Formula $\chi_{S}^{\omega^{n}\times\Sigma^{*m}}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable.
\end_layout

\begin_layout Standard
Es decir,
 
\begin_inset Formula $S$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable si existe un procedimiento 
\begin_inset Formula $\mathbb{P}$
\end_inset

 tal que:
\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

El conjunto de datos de entrada de 
\begin_inset Formula $\mathbb{P}$
\end_inset

 es 
\begin_inset Formula $\omega^{n}\times\Sigma^{*m}$
\end_inset

,
 siempre termina y da como dato de salida un elemento de 
\begin_inset Formula $\{0,1\}$
\end_inset

 
\end_layout

\begin_layout Itemize
Dado 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in\omega^{n}\times\Sigma^{*m}$
\end_inset

,
 
\begin_inset Formula $\mathbb{P}$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $(\vec{x},\vec{\alpha})$
\end_inset

 y da como salida 
\begin_inset Formula $1$
\end_inset

 si 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in S$
\end_inset

 y 
\begin_inset Formula $0$
\end_inset

 en caso contrario.
 
\end_layout

\begin_layout Standard
En este caso,
 decimos que el procedimiento efectivo 
\begin_inset Formula $\mathbb{P}$
\end_inset

 decide la pertenencia a 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Subsection
Combo 6
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-6"

\end_inset


\end_layout

\begin_layout Standard
Defina cuándo un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es llamado 
\begin_inset Formula $\Sigma$
\end_inset

-recursivamente enumerable y defina 
\begin_inset Quotes eld
\end_inset

el procedimiento efectivo 
\begin_inset Formula $\mathbb{P}$
\end_inset

 enumera a 
\begin_inset Formula $S$
\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-5"

\end_inset


\end_layout

\begin_layout Standard
Un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente enumerable si es vacío o 
\begin_inset Formula $\exists F:\omega\to\omega^{n}\times\Sigma^{*m}$
\end_inset

 tal que 
\begin_inset Formula $I_{F}=S$
\end_inset

 y 
\begin_inset Formula $F_{(i)}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente computable 
\begin_inset Formula $\forall i\in\{1,...,n+m\}$
\end_inset

.
\end_layout

\begin_layout Standard
Es decir,
 
\begin_inset Formula $S\neq\emptyset$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-efectivamente enumerable si existe un procedimiento efectivo 
\begin_inset Formula $\mathbb{P}$
\end_inset

 tal que:
\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

El conjunto de datos de entrada de 
\begin_inset Formula $\mathbb{P}$
\end_inset

 es 
\begin_inset Formula $\omega$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathbb{P}$
\end_inset

 se detiene para cada 
\begin_inset Formula $x\in\omega$
\end_inset

 
\end_layout

\begin_layout Itemize
El conjunto de datos de salida de 
\begin_inset Formula $\mathbb{P}$
\end_inset

 es igual a 
\begin_inset Formula $S$
\end_inset

 
\end_layout

\begin_layout Standard
En este caso,
 decimos que el procedimiento efectivo 
\begin_inset Formula $\mathbb{P}$
\end_inset

 enumera a 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Subsection
Combo 7
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-7"

\end_inset


\end_layout

\begin_layout Standard
Defina cuándo una función 
\begin_inset Formula $f:D_{f}\subseteq\omega^{n}\times\Sigma^{*m}\to\omega$
\end_inset

 es llamada 
\begin_inset Formula $\Sigma$
\end_inset

-Turing computable y defina 
\begin_inset Quotes eld
\end_inset

la máquina de Turing 
\begin_inset Formula $M$
\end_inset

 computa a la función 
\begin_inset Formula $f$
\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-6"

\end_inset


\end_layout

\begin_layout Standard
Diremos que 
\begin_inset Formula $f:D_{f}\subseteq\omega^{n}\times\Sigma^{*m}\to\omega$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-Turing computable si existe una máquina de Turing con 
\emph on
unit
\emph default
 
\begin_inset Formula $M=(Q,\Sigma,\Gamma,\delta,q_{0},B,\shortmid,F)$
\end_inset

 tal que:
\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in D_{f}$
\end_inset

,
 entonces 
\begin_inset Formula $\exists p\in Q:\lfloor q_{0}B\shortmid^{x_{1}}B...B\shortmid^{x_{n}}B\alpha_{1}B...B\alpha_{m}\rfloor\overset{*}{\vdash}\lfloor pB\shortmid^{f(\vec{x},\vec{\alpha})}\rfloor$
\end_inset

 y 
\begin_inset Formula $\lfloor pB\shortmid^{f(\vec{x},\vec{\alpha})}\rfloor\not\vdash d\forall d\in Des$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in(\omega^{n}\times\Sigma^{*m})-D_{f}$
\end_inset

,
 entonces 
\begin_inset Formula $M$
\end_inset

 
\series bold
no
\series default
 se detiene partiendo de 
\begin_inset Formula $\lfloor q_{0}B\shortmid^{x_{1}}B...B\shortmid^{x_{n}}B\alpha_{1}B...B\alpha_{m}\rfloor$
\end_inset

 
\end_layout

\begin_layout Standard
En este caso,
 diremos que la máquina de Turing 
\begin_inset Formula $M$
\end_inset

 computa a la función 
\begin_inset Formula $f$
\end_inset

.
\end_layout

\begin_layout Subsection
Combo 8
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-8"

\end_inset


\end_layout

\begin_layout Standard
Defina:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $M(P)$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $Lt$
\end_inset

 
\end_layout

\begin_layout Enumerate
Conjunto rectangular 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $S$
\end_inset

 es un conjunto de tipo 
\begin_inset Formula $(n,m)$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-7"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Este caso se trata de 
\series bold
minimización de variable numérica
\series default
.
 Sea 
\begin_inset Formula $\Sigma$
\end_inset

 un alfabeto finito y sea 
\begin_inset Formula $P:D_{P}\subseteq\omega\times\omega^{n}\times\Sigma^{*m}\to\omega$
\end_inset

 un predicado,
 dado 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in\omega^{n}\times\Sigma^{*m}$
\end_inset

,
 cuando exista al menos un 
\begin_inset Formula $t\in\omega:P(t,\vec{x},\vec{\alpha})=1$
\end_inset

,
 usaremos 
\begin_inset Formula $\min_{t}P(t,\vec{x},\vec{\alpha})$
\end_inset

 para denotar al menor de tales 
\begin_inset Formula $t$
\end_inset

's.
 Con ello,
 definimos 
\begin_inset Formula 
\[
M(P)=\lambda\vec{x}\vec{\alpha}\left[\min_{t}P(t,\vec{x},\vec{\alpha})\right]
\]

\end_inset

El cual cumple que:
 
\begin_inset Formula 
\[
\begin{aligned}D_{M(P)} & =\{(\vec{x},\vec{\alpha})\in\omega^{n}\times\Sigma^{*m}:(\exists t\in\omega)P(t,\vec{x},\vec{\alpha})\}\\
\\M(P)(\vec{x},\vec{\alpha}) & =\min_{t}P(t,\vec{x},\vec{\alpha}),\ \forall(\vec{x},\vec{\alpha})\in D_{M(P)}
\end{aligned}
\]

\end_inset

Y diremos que 
\begin_inset Formula $M(P)$
\end_inset

 se obtiene por 
\emph on
minimización de variable numérica
\emph default
 a partir de 
\begin_inset Formula $P$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Definimos la función del 
\emph on
mayor factor primo
\emph default
 como 
\begin_inset Formula 
\[
\begin{aligned}Lt & :N\to\omega\\
\\Lt(x) & =\begin{cases}
\max\{i\in N:(x)_{i}\neq0\} & \text{si }x\neq1\\
0 & \text{si }x=1
\end{cases}
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Sea 
\begin_inset Formula $\Sigma$
\end_inset

 un alfabeto finito,
 un conjunto 
\begin_inset Formula $\Sigma$
\end_inset

-mixto 
\begin_inset Formula $S$
\end_inset

 es llamado 
\emph on
rectangular
\emph default
 si es de la forma 
\begin_inset Formula $S_{1}\times...\times S_{n}\times L_{1}\times...\times L_{m}$
\end_inset

 con 
\begin_inset Formula $S_{i}\subseteq\omega$
\end_inset

 y 
\begin_inset Formula $L_{j}\subseteq\Sigma^{*}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Dado un conjunto 
\begin_inset Formula $\Sigma$
\end_inset

-mixto 
\begin_inset Formula $S$
\end_inset

 y 
\begin_inset Formula $n,m\in\omega:S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

,
 entonces 
\begin_inset Formula $S$
\end_inset

 es de tipo 
\begin_inset Formula $(n,m)$
\end_inset

 
\end_layout

\begin_layout Subsection
Combo 9
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-9"

\end_inset


\end_layout

\begin_layout Standard
Defina:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Quotes eld
\end_inset


\begin_inset Formula $I$
\end_inset

 es una instrucción de 
\begin_inset Formula $S^{\Sigma}$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\mathcal{P}$
\end_inset

 es un programa de 
\begin_inset Formula $S^{\Sigma}$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $I_{i}^{\mathcal{P}}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $n(\mathcal{P})$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $Bas$
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-8"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Una 
\emph on
instrucción de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset


\emph default
 es ya sea una instrucción básica de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset

,
 o una palabra de la forma 
\begin_inset Formula $\alpha I$
\end_inset

,
 donde 
\begin_inset Formula $\alpha\in\{L\bar{n}:n\in N\}$
\end_inset

 e 
\begin_inset Formula $I$
\end_inset

 es una instrucción básica de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Cuando 
\begin_inset Formula $I$
\end_inset

 es de la forma 
\begin_inset Formula $L\bar{n}J$
\end_inset

 con 
\begin_inset Formula $J$
\end_inset

 una instrucción básica,
 diremos que 
\begin_inset Formula $L\bar{n}$
\end_inset

 es la 
\emph on
label de 
\begin_inset Formula $I$
\end_inset


\emph default
 
\end_layout

\begin_layout Itemize
Una 
\emph on
instrucción básica de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset


\emph default
 es una palabra 
\begin_inset Formula $(\Sigma\cup\Sigma_{P})^{*}$
\end_inset

 la cual es de alguna de las siguientes formas (donde 
\begin_inset Formula $a\in\Sigma;\ k,n\in N$
\end_inset

):
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $N\bar{k}\leftarrow N\bar{k}+1$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $N\bar{k}\leftarrow N\bar{k}\dot{-}1$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $N\bar{k}\leftarrow N\bar{n}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $N\bar{k}\leftarrow0$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $P\bar{k}\leftarrow P\bar{k}.a$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $P\bar{k}\leftarrow\ ^{\curvearrowright}P\bar{k}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $P\bar{k}\leftarrow P\bar{n}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $P\bar{k}\leftarrow\varepsilon$
\end_inset

 
\end_layout

\begin_layout Itemize
IF 
\begin_inset Formula $N\bar{k}\neq0$
\end_inset

 GOTO 
\begin_inset Formula $L\bar{n}$
\end_inset

 
\end_layout

\begin_layout Itemize
IF 
\begin_inset Formula $P\bar{k}$
\end_inset

 BEGINS 
\begin_inset Formula $a$
\end_inset

 GOTO 
\begin_inset Formula $L\bar{n}$
\end_inset

 
\end_layout

\begin_layout Itemize
GOTO 
\begin_inset Formula $L\bar{n}$
\end_inset

 
\end_layout

\begin_layout Itemize
SKIP 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Un 
\emph on
programa
\emph default
 de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset

 es una palabra de la forma 
\begin_inset Formula $I_{1}I_{2}..I_{n}$
\end_inset

 donde 
\begin_inset Formula $n\geq1,I_{1},..,I_{n}\in Ins^{\Sigma}$
\end_inset

 y además se cumple la 
\emph on
ley de los GOTO
\emph default
:
 
\begin_inset Formula $\forall i\in\{1,..,n\}$
\end_inset

,
 si GOTO
\begin_inset Formula $L\bar{m}$
\end_inset

 es un tramo final de 
\begin_inset Formula $I_{i}$
\end_inset

,
 entonces 
\begin_inset Formula $\exists j\in\{1,..,n\}$
\end_inset

 tal que 
\begin_inset Formula $I_{j}$
\end_inset

 tiene label 
\begin_inset Formula $L\bar{m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Definimos 
\begin_inset Formula $I_{i}^{\mathcal{P}}$
\end_inset

 como la 
\begin_inset Formula $i$
\end_inset

-ésima instrucción de 
\begin_inset Formula $\mathcal{P}$
\end_inset

 y,
 además,
 
\begin_inset Formula $I_{i}^{\mathcal{P}}=\varepsilon$
\end_inset

 cuando 
\begin_inset Formula $i=0$
\end_inset

 o 
\begin_inset Formula $i>n(\mathcal{P})$
\end_inset

 
\end_layout

\begin_layout Enumerate
Definimos 
\begin_inset Formula $n(\mathcal{P})$
\end_inset

 como la cantidad de instrucciones de 
\begin_inset Formula $\mathcal{P}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Definimos 
\begin_inset Formula $Bas:Ins^{\Sigma}\to(\Sigma\cup\Sigma_{p})^{*}$
\end_inset

 dada por 
\begin_inset Formula 
\[
Bas(I)=\begin{cases}
J & \text{si }I\text{ es de la forma }L\bar{k}J\text{ con }J\in Ins^{\Sigma}\\
I & \text{en otro caso}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Subsection
Combo 10
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-10"

\end_inset


\end_layout

\begin_layout Standard
Defina,
 relativo al lenguaje 
\begin_inset Formula $S^{\Sigma}$
\end_inset

:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Quotes eld
\end_inset

Estado
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Descripción instantánea
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $S_{\mathcal{P}}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

Estado obtenido luego de 
\begin_inset Formula $t$
\end_inset

 pasos,
 partiendo del estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene (luego de 
\begin_inset Formula $t$
\end_inset

 pasos),
 partiendo del estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-9"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Un estado es un par 
\begin_inset Formula $(\vec{s},\vec{\sigma})=((s_{1},s_{2},...),(\sigma_{1},\sigma_{2},...))\in\omega^{[N]}\times\Sigma^{*[N]}$
\end_inset

 y,
 si 
\begin_inset Formula $i\geq1$
\end_inset

,
 entonces diremos que 
\begin_inset Formula $s_{i}$
\end_inset

 es el contenido o valor de la variable 
\begin_inset Formula $N\bar{i}$
\end_inset

 en el estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset

 y 
\begin_inset Formula $\sigma_{i}$
\end_inset

 es el contenido o valor de la variable 
\begin_inset Formula $P\bar{i}$
\end_inset

 en el estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Enumerate
Una descripción instantánea es una terna 
\begin_inset Formula $(i,\vec{s},\vec{\sigma})$
\end_inset

 tal que 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset

 es un estado e 
\begin_inset Formula $i\in\omega$
\end_inset

.
 Intuitivamente,
 
\begin_inset Formula $(i,\vec{s},\vec{\sigma})$
\end_inset

 nos dice que las variables están en el estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset

 y que la instrucción que debemos realizar es 
\begin_inset Formula $I_{i}^{\mathcal{P}}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Dado un programa 
\begin_inset Formula $\mathcal{P}$
\end_inset

,
 definimos 
\begin_inset Formula $S_{\mathcal{P}}:\omega\times\omega^{[N]}\times\Sigma^{*[N]}\to\omega\times\omega^{[N]}\times\Sigma^{*[N]}$
\end_inset

 como la función que asignará a una descripción instantánea 
\begin_inset Formula $(i,\vec{s},\vec{\sigma})$
\end_inset

 la descripción instantánea sucesora de 
\begin_inset Formula $(i,\vec{s},\vec{\sigma})$
\end_inset

 con respecto a 
\begin_inset Formula $\mathcal{P}$
\end_inset

.
 Es decir,
 hay varios casos posibles:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si 
\begin_inset Formula $i\notin\{1,..,n(\mathcal{P})\}$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i,\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=N\bar{k}\leftarrow N\bar{k}\dot{-}1$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,(s_{1},..,s_{k-1},s_{k}\dot{-}1,s_{k+1},..),\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=N\bar{k}\leftarrow N\bar{k}+1$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,(s_{1},..,s_{k-1},s_{k}+1,s_{k+1},..),\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=N\bar{k}\leftarrow N\bar{n}$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,(s_{1},..,s_{k-1},s_{n},s_{k+1},..),\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=N\bar{k}\leftarrow0$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,(s_{1},..,s_{k-1},0,s_{k+1},..),\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=\text{IF }N\bar{k}\neq0\text{ GOTO }L\bar{m}$
\end_inset

,
 entonces hay dos posibilidades:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si el valor contenido en 
\begin_inset Formula $N\bar{k}$
\end_inset

 es 
\begin_inset Formula $0$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si el valor contenido en 
\begin_inset Formula $N\bar{k}$
\end_inset

 es no nulo,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(\min\{l:I_{l}^{\mathcal{P}}\text{ tiene label }L\bar{m}\},\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=P\bar{k}\leftarrow\ ^{\curvearrowright}P\bar{k}$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,\vec{s},(\sigma_{1},..,\sigma_{k-1},\ ^{\curvearrowright}\sigma_{k},\sigma_{k+1},..))$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=P\bar{k}\leftarrow P\bar{k}.a$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,\vec{s},(\sigma_{1},..,\sigma_{k-1},\sigma_{k}a,\sigma_{k+1},..))$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=P\bar{k}\leftarrow P\bar{n}$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,\vec{s},(\sigma_{1},..,\sigma_{k-1},\sigma_{n},\sigma_{k+1},..))$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=P\bar{k}\leftarrow\varepsilon$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,\vec{s},(\sigma_{1},..,\sigma_{k-1},\varepsilon,\sigma_{k+1},..))$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=\text{IF }P\bar{k}\text{ BEGINS }a\text{ GOTO }L\bar{m}$
\end_inset

,
 entonces hay dos posibilidades:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si la palabra contenida en 
\begin_inset Formula $P\bar{k}$
\end_inset

 comienza con 
\begin_inset Formula $a$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(\min\{l:I_{l}^{\mathcal{P}}\text{ tiene label }L\bar{m}\},\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si la palabra contenida en 
\begin_inset Formula $P\bar{k}$
\end_inset

 no comienza con 
\begin_inset Formula $a$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=\text{GOTO }L\bar{m}$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(\min\{l:I_{l}^{\mathcal{P}}\text{ tiene label }L\bar{m}\},\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $Bas(I_{i}^{\mathcal{P}})=\text{SKIP}$
\end_inset

,
 entonces 
\begin_inset Formula $S_{\mathcal{P}}(i,\vec{s},\vec{\sigma})=(i+1,\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Diremos que 
\begin_inset Formula $S_{\mathcal{P}}(S_{\mathcal{P}}(...(S_{\mathcal{P}}(1,\vec{s},\vec{\sigma}))...))=(j,\vec{u},\vec{\eta})$
\end_inset

 con 
\begin_inset Formula $S_{\mathcal{P}}$
\end_inset

 aplicado 
\begin_inset Formula $t$
\end_inset

 veces,
 es la 
\emph on
descripción instantánea obtenida luego de 
\begin_inset Formula $t$
\end_inset

 pasos partiendo del estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset


\emph default
,
 y 
\begin_inset Formula $(\vec{u},\vec{\eta})$
\end_inset

 es el estado obtenido luego de 
\begin_inset Formula $t$
\end_inset

 pasos partiendo del estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Enumerate
Cuando la primer coordenada de 
\begin_inset Formula $S_{\mathcal{P}}(S_{\mathcal{P}}(...(S_{\mathcal{P}}(1,\vec{s},\vec{\sigma}))...))$
\end_inset

 (con 
\begin_inset Formula $S_{\mathcal{P}}$
\end_inset

 aplicado 
\begin_inset Formula $t$
\end_inset

 veces) es 
\begin_inset Formula $n(\mathcal{P})+1$
\end_inset

,
 diremos que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene (luego de 
\begin_inset Formula $t$
\end_inset

 pasos),
 partiendo desde el estado 
\begin_inset Formula $(\vec{s},\vec{\sigma})$
\end_inset

 
\end_layout

\begin_layout Subsection
Combo 11
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-11"

\end_inset


\end_layout

\begin_layout Standard
Defina:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\Psi_{\mathcal{P}}^{n,m,\#}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $f$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-computable
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\mathcal{P}$
\end_inset

 computa a 
\begin_inset Formula $f$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $M^{\leq}(P)$
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-10"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Dado 
\begin_inset Formula $\mathcal{P}\in Pro^{\Sigma}$
\end_inset

,
 definimos 
\begin_inset Formula $\Psi_{\mathcal{P}}^{n,m,\#}$
\end_inset

 como:
 
\begin_inset Formula 
\[
\begin{aligned}D_{\Psi_{\mathcal{P}}^{n,m,\#}} & =\{(\vec{x},\vec{\alpha})\in\omega^{n}\times\Sigma^{*m}:\mathcal{P}\text{ termina partiendo de }||\vec{x},\vec{\alpha}||\}\\
\\\Psi_{\mathcal{P}}^{n,m,\#}(\vec{x},\vec{\alpha}) & =\text{valor de N1 cuando }\mathcal{P}\text{ termina partiendo de }||\vec{x},\vec{\alpha}||
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Una función 
\begin_inset Formula $\Sigma$
\end_inset

-mixta 
\begin_inset Formula $f:S\subseteq\omega^{n}\times\Sigma^{*m}\to\omega$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-computable si existe un programa 
\begin_inset Formula $\mathcal{P}\in\mathcal{S}^{\Sigma}$
\end_inset

 tal que 
\begin_inset Formula $f=\Psi_{\mathcal{P}}^{n,m,\#}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Se define de forma análoga para funciones 
\begin_inset Formula $\Sigma$
\end_inset

-mixtas 
\begin_inset Formula $f:S\subseteq\omega^{n}\times\Sigma^{*m}\to\Sigma^{*}$
\end_inset

 con 
\begin_inset Formula $f=\Psi_{\mathcal{P}}^{n,m,*}$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
En el caso anterior,
 decimos que 
\begin_inset Formula $f$
\end_inset

 es 
\emph on
computada
\emph default
 por 
\begin_inset Formula $\mathcal{P}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Sea 
\begin_inset Formula $\Sigma\neq\emptyset$
\end_inset

 un alfabeto con 
\begin_inset Formula $\leq$
\end_inset

 un orden total sobre este,
 y sea 
\begin_inset Formula $P:D_{P}\subseteq\omega^{n}\times\Sigma^{*m}\times\Sigma^{*}\to\omega$
\end_inset

 un predicado,
 dado 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in\omega^{n}\times\Sigma^{*m}$
\end_inset

,
 cuando exista al menos un 
\begin_inset Formula $\alpha\in\Sigma^{*}$
\end_inset

 tal que 
\begin_inset Formula $P(\vec{x},\vec{\alpha},\alpha)=1$
\end_inset

,
 usaremos 
\begin_inset Formula $\min_{\alpha}^{\leq}P(\vec{x},\vec{\alpha},\alpha)$
\end_inset

 para denotar al menor de tales 
\begin_inset Formula $\alpha$
\end_inset

's.
 Con ello,
 definimos:
 
\begin_inset Formula 
\[
M^{\leq}(P)=\lambda\vec{x}\vec{\alpha}[min_{\alpha}^{\leq}P(\vec{x},\vec{\alpha},\alpha)]
\]

\end_inset

El cual cumple que:
 
\begin_inset Formula 
\[
\begin{aligned}D_{M^{\leq}(P)} & =\{(\vec{x},\vec{\alpha})\in\omega^{n}\times\Sigma^{*m}:(\exists\alpha\in\Sigma^{*})P(\vec{x},\vec{\alpha},\alpha)=1\}\\
\\M^{\leq}(P)(\vec{x},\vec{\alpha}) & =min_{\alpha}^{\leq}P(\vec{x},\vec{\alpha},\alpha),\forall(\vec{x},\vec{\alpha})\in D_{M^{\leq}(P)}
\end{aligned}
\]

\end_inset

Y diremos que 
\begin_inset Formula $M^{\leq}(P)$
\end_inset

 se obtiene por 
\emph on
minimización de variable alfabética
\emph default
 a partir de 
\begin_inset Formula $P$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Combo 12
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-12"

\end_inset


\end_layout

\begin_layout Standard
Defina cuándo un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es llamado 
\begin_inset Formula $\Sigma$
\end_inset

-computable,
 cuándo es llamado 
\begin_inset Formula $\Sigma$
\end_inset

-enumerable y defina 
\begin_inset Quotes eld
\end_inset

el programa 
\begin_inset Formula $\mathcal{P}$
\end_inset

 enumera a 
\begin_inset Formula $S$
\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-11"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-computable si 
\begin_inset Formula $\chi_{S}^{\omega^{n}\times\Sigma^{*m}}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-computable.
 Es decir,
 es 
\begin_inset Formula $\Sigma$
\end_inset

-computable si y solo si hay un programa 
\begin_inset Formula $\mathcal{P}\in Pro^{\Sigma}$
\end_inset

 que computa a 
\begin_inset Formula $\chi_{S}^{\omega^{n}\times\Sigma^{*m}}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si 
\begin_inset Formula $(\vec{x},\vec{\alpha})\in S$
\end_inset

,
 entonces 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $||x_{1},..,x_{n},\alpha_{1},..,\alpha_{m}||$
\end_inset

 y la variable 
\begin_inset Formula $N1$
\end_inset

 queda con contenido igual a 
\begin_inset Formula $1$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $(\vec{x},\vec{\alpha})\notin S$
\end_inset

,
 entonces 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $||x_{1},..,x_{n},\alpha_{1},..,\alpha_{m}||$
\end_inset

 y la variable 
\begin_inset Formula $N1$
\end_inset

 queda con contenido igual a 
\begin_inset Formula $0$
\end_inset

 
\end_layout

\begin_layout Standard
Decimos que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 decide la pertenencia a 
\begin_inset Formula $S$
\end_inset

 respecto al conjunto 
\begin_inset Formula $\omega^{n}\times\Sigma^{*m}$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
Un conjunto 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-enumerable si es vacío o existe una función 
\begin_inset Formula $F:\omega\to\omega^{n}\times\Sigma^{*m}$
\end_inset

 tal que 
\begin_inset Formula $I_{F}=S$
\end_inset

 y 
\begin_inset Formula $F_{(i)}$
\end_inset

 sea una función 
\begin_inset Formula $\Sigma$
\end_inset

-computable para todo 
\begin_inset Formula $i\in{1,..,n+m}$
\end_inset

 
\end_layout

\begin_layout Itemize
Por 
\emph on
propiedad
\emph default
,
 sabemos que:
 Sea 
\begin_inset Formula $S\subseteq\omega^{n}\times\Sigma^{*m}$
\end_inset

 un conjunto no vacío,
 entonces son equivalentes:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $S$
\end_inset

 es 
\begin_inset Formula $\Sigma$
\end_inset

-enumerable 
\end_layout

\begin_layout Itemize
Hay un programa 
\begin_inset Formula $\mathcal{P}\in Pro^{\Sigma}$
\end_inset

 tal que
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\forall x\in\omega$
\end_inset

,
 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $||x||$
\end_inset

 y llega a un estado de la forma 
\begin_inset Formula $((x_{1},..,x_{n},y_{1},...),(\alpha_{1},..,\alpha_{m},\beta_{1},..))$
\end_inset

 con 
\begin_inset Formula $(x_{1},..,x_{n},\alpha_{1},..,\alpha_{m})\in S$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall(x_{1},..,x_{n},\alpha_{1},..,\alpha_{m})\in S$
\end_inset

,
 
\begin_inset Formula $\exists x\in\omega$
\end_inset

 tal que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $||x||$
\end_inset

 y llega a un estado de la forma 
\begin_inset Formula $((x_{1},..,x_{n},y_{1},...),(\alpha_{1},..,\alpha_{m},\beta_{1},..))$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
Decimos que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 
\emph on
enumera
\emph default
 a 
\begin_inset Formula $S$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection
Combo 13
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-13"

\end_inset


\end_layout

\begin_layout Standard
Defina:
\end_layout

\begin_layout Enumerate
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset FormulaMacro
\renewcommand{\labelenumi}{\arabic{enumi}.}
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $i^{n,m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $E_{\#}^{n,m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $E_{*}^{n,m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $E_{\#j}^{n,m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $E_{*j}^{n,m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $Halt^{n,m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $T^{n,m}$
\end_inset

 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $AutoHalt^{\Sigma}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Los conjuntos 
\begin_inset Formula $A$
\end_inset

 y 
\begin_inset Formula $N$
\end_inset

 
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-12"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Sean 
\begin_inset Formula $n,m\in\omega$
\end_inset

,
 definimos las siguientes funciones:
 
\begin_inset Formula 
\[
\begin{aligned}i^{n,m} & :\omega\times\omega^{n}\times\Sigma^{*m}\times Pro^{\Sigma}\to\omega\\
E_{\#}^{n,m} & :\omega\times\omega^{n}\times\Sigma^{*m}\times Pro^{\Sigma}\to\omega^{[N]}\\
E_{*}^{n,m} & :\omega\times\omega^{n}\times\Sigma^{*m}\times Pro^{\Sigma}\to\Sigma^{[N]}
\end{aligned}
\]

\end_inset

de modo que 
\begin_inset Formula $(i^{n,m}(t,\vec{x},\vec{\alpha},\mathcal{P}),E_{\#}^{n,m}(t,\vec{x},\vec{\alpha},\mathcal{P}),E_{*}^{n,m}(t,\vec{x},\vec{\alpha},\mathcal{P}))$
\end_inset

 es la descripción instantánea que se obtiene luego de correr 
\begin_inset Formula $\mathcal{P}$
\end_inset

 una cantidad 
\begin_inset Formula $t$
\end_inset

 de pasos partiendo del estado 
\begin_inset Formula $||x_{1},..,x_{n},\alpha_{1},..,\alpha_{m}||$
\end_inset

.
 Si las definimos formalmente,
 podemos hacerlo de forma recursiva:
 
\begin_inset Formula 
\[
\begin{aligned}(i^{n,m}(0,\vec{x},\vec{\alpha},\mathcal{P}),E_{\#}^{n,m}(0,\vec{x},\vec{\alpha},\mathcal{P}),E_{*}^{n,m}(0,\vec{x},\vec{\alpha},\mathcal{P})) & =\\
(1,(x_{1},..,x_{n},0,...),(\alpha_{1},..,\alpha_{m},\varepsilon,...))\\
\\(i^{n,m}(t+1,\vec{x},\vec{\alpha},\mathcal{P}),E_{\#}^{n,m}(t+1,\vec{x},\vec{\alpha},\mathcal{P}),E_{*}^{n,m}(t+1,\vec{x},\vec{\alpha},\mathcal{P})) & =\\
S_{\mathcal{P}}(i^{n,m}(t,\vec{x},\vec{\alpha},\mathcal{P}),E_{\#}^{n,m}(t,\vec{x},\vec{\alpha},\mathcal{P}),E_{*}^{n,m}(t,\vec{x},\vec{\alpha},\mathcal{P}))
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Itemize
Definimos también las funciones 
\begin_inset Formula 
\[
\begin{aligned}E_{\#j}^{n,m}:\omega\times\omega^{n}\times\Sigma^{*m}\times Pro^{\Sigma}\to\omega\\
E_{*j}^{n,m}:\omega\times\omega^{n}\times\Sigma^{*m}\times Pro^{\Sigma}\to\Sigma^{*}
\end{aligned}
\]

\end_inset

que marcan el valor de la 
\begin_inset Formula $j$
\end_inset

-ésima componente de 
\begin_inset Formula $E_{\#}^{n,m}$
\end_inset

 y 
\begin_inset Formula $E_{*}^{n,m}$
\end_inset

,
 respectivamente.
 Es decir:
 
\begin_inset Formula 
\[
\begin{aligned}E_{\#j}^{n,m}=p_{j}^{n,m}\circ E_{\#}^{n,m}\\
\\E_{*j}^{n,m}=p_{j}^{n,m}\circ E_{*}^{n,m}
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Itemize
Dados 
\begin_inset Formula $n,m\in\omega$
\end_inset

,
 definimos 
\begin_inset Formula $Halt^{n,m}=\lambda t\vec{x}\vec{\alpha}\mathcal{P}[i^{n,m}(t,\vec{x},\vec{\alpha},\mathcal{P})=n(\mathcal{P})+1]$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Básicamente,
 
\begin_inset Formula $Halt^{n,m}$
\end_inset

 es un predicado que dice si 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene luego de 
\begin_inset Formula $t$
\end_inset

 pasos partiendo del estado 
\begin_inset Formula $||x_{1},..,x_{n},\alpha_{1},..,\alpha_{m}||$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Definimos 
\begin_inset Formula $T^{n,m}=M(Halt^{n,m})$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $D_{T^{n,m}}=\{(\vec{x},\vec{\alpha},\mathcal{P}):\mathcal{P}\text{ se detiene partiendo de }||x_{1},..,x_{n},\alpha_{1},..,\alpha_{m}||\}$
\end_inset

 
\end_layout

\begin_layout Itemize
Para 
\begin_inset Formula $(\vec{x},\vec{\alpha},\mathcal{P})\in D_{T^{n,m}}$
\end_inset

,
 
\begin_inset Formula $T^{n,m}(\vec{x},\vec{\alpha},\mathcal{P})$
\end_inset

 indica la cantidad de pasos necesarios para que 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detenga partiendo de 
\begin_inset Formula $||x_{1},..,x_{n},\alpha_{1},..,\alpha_{m}||$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Cuando 
\begin_inset Formula $\Sigma\supseteq\Sigma_{p}$
\end_inset

,
 podemos definir 
\begin_inset Formula $AutoHalt^{\Sigma}=\lambda\mathcal{P}[(\exists t\in\omega)Halt^{0,1}(t,\mathcal{P},\mathcal{P})]$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Notar que 
\begin_inset Formula $D_{AutoHalt^{\Sigma}}=Pro^{\Sigma}$
\end_inset

 y que 
\begin_inset Formula $\forall\mathcal{P}\in Pro^{\Sigma},AutoHalt^{\Sigma}(\mathcal{P})=1$
\end_inset

 sii 
\begin_inset Formula $\mathcal{P}$
\end_inset

 se detiene partiendo del estado 
\begin_inset Formula $||\mathcal{P}||$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Supongamos 
\begin_inset Formula $\Sigma\supseteq\Sigma_{p}$
\end_inset

.
 Entonces 
\begin_inset Formula $A=\{\mathcal{P}\in Pro^{\Sigma}:AutoHalt^{\Sigma}(\mathcal{P})=1\}$
\end_inset

 y 
\begin_inset Formula $N=\{\mathcal{P}\in Pro^{\Sigma}:AutoHalt^{\Sigma}(\mathcal{P})=0\}$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Combo 14
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-14"

\end_inset


\end_layout

\begin_layout Standard
Explique en forma detallada la notación lambda.
\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-13"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Una expresión es 
\emph on
lambdificable
\emph default
 con respecto a 
\begin_inset Formula $\Sigma$
\end_inset

 si cumple las siguientes características:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Involucra variables numéricas (que se valuaran en números de 
\begin_inset Formula $\omega$
\end_inset

),
 y variables alfabéticas (que se valuaran en palabras del alfabeto previamente fijado)
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

En cuanto a notación,
 las numéricas son con letras latinas minúsculas (
\begin_inset Formula $x,y,z$
\end_inset

) y las alfabéticas con letras griegas minúsculas (
\begin_inset Formula $\alpha,\beta,\gamma$
\end_inset

) 
\end_layout

\end_deeper
\begin_layout Itemize
Para ciertas valuaciones de sus variables la expresión puede 
\emph on
no
\emph default
 estar definida (por ejemplo,
 
\begin_inset Formula $Pred(|\alpha|)$
\end_inset

 para 
\begin_inset Formula $\alpha=\varepsilon$
\end_inset

) 
\end_layout

\begin_layout Itemize
Sea 
\begin_inset Formula $E$
\end_inset

 la expresión,
 los valores que asuma cuando hayan sido asignados los valores de 
\begin_inset Formula $\omega$
\end_inset

 a sus variables numéricas y valores de 
\begin_inset Formula $\Sigma^{*}$
\end_inset

 a sus variables alfabéticas,
 deberán ser 
\emph on
siempre
\emph default
 elementos de 
\begin_inset Formula $O\in\{\omega,\Sigma^{*}\}$
\end_inset

 (es decir,
 no puede tomar valores mixtos) 
\end_layout

\begin_layout Itemize
La expresión puede involucrar lenguaje coloquial castellano (i.e.,
 no únicamente operaciones matemáticas).
 Por ejemplo,
 
\begin_inset Quotes eld
\end_inset

el menor número primo que es mayor que 
\begin_inset Formula $x$
\end_inset


\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
A las 
\emph on
expresiones booleanas
\emph default
 (como 
\begin_inset Formula $x=0$
\end_inset

),
 se les considerará que asumen valores de 
\begin_inset Formula $\{0,1\}\subseteq\omega$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Definición
\emph default
:
 sea 
\begin_inset Formula $\Sigma$
\end_inset

 un alfabeto finito fijo,
 
\begin_inset Formula $E$
\end_inset

 una expresión lambdificable respecto a 
\begin_inset Formula $\Sigma$
\end_inset

 y 
\begin_inset Formula $x_{1},..,x_{n},\alpha_{1},..,\alpha_{m}$
\end_inset

 variables distintas tales que las numéricas que ocurren en 
\begin_inset Formula $E$
\end_inset

 están en 
\begin_inset Formula $\{x_{1},..,x_{n}\}$
\end_inset

 y las alfabéticas en 
\begin_inset Formula $\{\alpha_{1},..,\alpha_{m}\}$
\end_inset

,
 entonces 
\begin_inset Formula $\lambda x_{1}..x_{n}\alpha_{1}..\alpha_{m}[E]$
\end_inset

 denota la función definida por:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $D_{\lambda x_{1}..x_{n}\alpha_{1}..\alpha_{m}[E]}=\{(k_{1},..,k_{n},\beta_{1},..,\beta_{m})\in\omega^{n}\times\Sigma^{*m}:E$
\end_inset

 está definida cuando asignamos a cada 
\begin_inset Formula $x_{i}$
\end_inset

 el valor 
\begin_inset Formula $k_{i}$
\end_inset

,
 y a cada 
\begin_inset Formula $\alpha_{i}$
\end_inset

,
 el valor 
\begin_inset Formula $\beta_{i}\}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda x_{1}..x_{n}\alpha_{1}..\alpha_{m}[E](k_{1},..,k_{n},\beta_{1},..,\beta_{m})=$
\end_inset

 valor que asume o representa 
\begin_inset Formula $E$
\end_inset

 cuando asignamos a cada 
\begin_inset Formula $x_{i}$
\end_inset

 el valor 
\begin_inset Formula $k_{i}$
\end_inset

,
 y a cada 
\begin_inset Formula $\alpha_{i}$
\end_inset

,
 el valor 
\begin_inset Formula $\beta_{i}$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection
Combo 15
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-15"

\end_inset


\end_layout

\begin_layout Standard
Dada una función 
\begin_inset Formula $f:D_{f}\subseteq\omega^{n}\times\Sigma^{*m}\to\omega$
\end_inset

,
 describa qué tipo de objeto es y qué propiedades debe tener el macro:
 
\begin_inset Formula 
\[
[V2\leftarrow f(V1,W1)]
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-14"

\end_inset


\end_layout

\begin_layout Standard
Dada la función 
\begin_inset Formula $f:D_{f}\subseteq\omega\times\Sigma^{*}\to\omega$
\end_inset

,
 el macro 
\begin_inset Formula $[V2\leftarrow f(V1,W1)]$
\end_inset

 es un objeto de tipo 
\series bold
PALABRA
\series default
.
\end_layout

\begin_layout Standard
Para que el macro 
\begin_inset Formula $[V2\leftarrow f(V1,W1)]$
\end_inset

 sea válido (i.e.,
 exista en el lenguaje 
\begin_inset Formula $S^{\Sigma}$
\end_inset

),
 debe cumplir las siguientes propiedades:
\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Las variables oficiales de 
\begin_inset Formula $M$
\end_inset

 son 
\begin_inset Formula $V1,V2,W1$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $M$
\end_inset

 no tiene labels oficiales 
\end_layout

\begin_layout Itemize
Si reemplazamos:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

las variables oficiales de 
\begin_inset Formula $M$
\end_inset

 por variables concretas 
\begin_inset Formula $N\overline{k_{1}},N\overline{k_{2}},P\overline{j_{1}}$
\end_inset

,
 
\end_layout

\begin_layout Itemize
las variables auxiliares de 
\begin_inset Formula $M$
\end_inset

 por variables concretas distintas de a dos y NO pertececientes a 
\begin_inset Formula $\{N\overline{k_{1}},N\overline{k_{2}},P\overline{j_{1}}\}$
\end_inset

,
 
\end_layout

\begin_layout Itemize
los labels auxiliares de 
\begin_inset Formula $M$
\end_inset

 por labels concretos distintos de a dos,
 entonces la palabra obtenida es un programa de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset

 que denotaremos con 
\begin_inset Formula $[N\overline{k_{2}}\leftarrow f(N\overline{k_{1}},P\overline{j_{1}})]$
\end_inset

 y tiene la siguiente propiedad:
 
\end_layout

\begin_layout Itemize
Si corremos 
\begin_inset Formula $[N\overline{k_{2}}\leftarrow f(N\overline{k_{1}},P\overline{j_{1}})]$
\end_inset

 partiendo de un estado 
\begin_inset Formula $e$
\end_inset

 que asigne a 
\begin_inset Formula $N\overline{k_{1}},P\overline{j_{1}}$
\end_inset

 los valores 
\begin_inset Formula $x_{1},\alpha_{1}$
\end_inset

 respectivamente,
 entonces independientemente de los valores que les asigne 
\begin_inset Formula $e$
\end_inset

 a las demás variables,
 se dará que:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si 
\begin_inset Formula $(x_{1},\alpha_{1})\notin D_{f}$
\end_inset

,
 entonces 
\begin_inset Formula $[N\overline{k_{2}}\leftarrow f(N\overline{k_{1}},P\overline{j_{1}})]$
\end_inset

 
\series bold
no
\series default
 se detiene partiendo de 
\begin_inset Formula $e$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $(x_{1},\alpha_{1})\in D_{f}$
\end_inset

,
 entonces 
\begin_inset Formula $[N\overline{k_{2}}\leftarrow f(N\overline{k_{1}},P\overline{j_{1}})]$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $e$
\end_inset

 y llega a un estado 
\begin_inset Formula $e'$
\end_inset

 que cumple que:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $e'$
\end_inset

 le asigna a 
\begin_inset Formula $N\overline{k_{2}}$
\end_inset

 el valor 
\begin_inset Formula $f(x_{1},\alpha_{1})$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $e'$
\end_inset

 solo puede diferir de 
\begin_inset Formula $e$
\end_inset

 en los valores que le asigna a 
\begin_inset Formula $N\overline{k_{2}}$
\end_inset

 o a las variables que fueron a reemplazar a las variables auxiliares de 
\begin_inset Formula $M$
\end_inset

 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Subsection
Combo 16
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "combo-16"

\end_inset


\end_layout

\begin_layout Standard
Dado un predicado 
\begin_inset Formula $P:D_{P}\subseteq\omega^{n}\times\Sigma^{*m}\to\omega$
\end_inset

,
 describa qué tipo de objeto es y qué propiedades debe tener el macro:
 
\begin_inset Formula 
\[
[\text{IF }P(V1,W1)\text{ GOTO }A1]
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Resolución
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "resoluciuxf3n-15"

\end_inset


\end_layout

\begin_layout Standard
Dado el predicado 
\begin_inset Formula $P:D_{P}\subseteq\omega\times\Sigma^{*}\to\omega$
\end_inset

,
 el macro 
\begin_inset Formula $[\text{IF }P(V1,W1)\text{ GOTO }A1]$
\end_inset

 es un objeto de tipo 
\series bold
PALABRA
\series default
.
\end_layout

\begin_layout Standard
Para que el macro 
\begin_inset Formula $[\text{IF }P(V1,W1)\text{ GOTO }A1]$
\end_inset

 sea válido (i.e.,
 exista en el lenguaje 
\begin_inset Formula $S^{\Sigma}$
\end_inset

),
 debe cumplir las siguientes propiedades:
\end_layout

\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Las variables oficiales de 
\begin_inset Formula $M$
\end_inset

 son 
\begin_inset Formula $V1,W1$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $A1$
\end_inset

 es el único label oficial de 
\begin_inset Formula $M$
\end_inset

 
\end_layout

\begin_layout Itemize
Si reemplazamos:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

las variables oficiales de 
\begin_inset Formula $M$
\end_inset

 por variables concretas 
\begin_inset Formula $N\overline{k_{1}},P\overline{j_{1}}$
\end_inset

,
 
\end_layout

\begin_layout Itemize
el label oficial 
\begin_inset Formula $A1$
\end_inset

 por el label concreto 
\begin_inset Formula $L\bar{k}$
\end_inset

,
 
\end_layout

\begin_layout Itemize
las variables auxiliares de 
\begin_inset Formula $M$
\end_inset

 por variables concretas distintas de a dos y NO pertececientes a 
\begin_inset Formula $\{N\overline{k_{1}},P\overline{j_{1}}\}$
\end_inset

,
 
\end_layout

\begin_layout Itemize
los labels auxiliares de 
\begin_inset Formula $M$
\end_inset

 por labels concretos distintos de a dos y ninguno de ellos igual a 
\begin_inset Formula $L\bar{k}$
\end_inset

,
 entonces la palabra obtenida es un programa de 
\begin_inset Formula $\mathcal{S}^{\Sigma}$
\end_inset

 que denotaremos con 
\begin_inset Formula $[\text{IF }P(N\overline{k_{1}},P\overline{j_{1}})\text{ GOTO }L\bar{k}]$
\end_inset

 y tiene la siguiente propiedad:
 
\end_layout

\begin_layout Itemize
Si corremos 
\begin_inset Formula $[\text{IF }P(N\overline{k_{1}},P\overline{j_{1}})\text{ GOTO }L\bar{k}]$
\end_inset

 partiendo de un estado 
\begin_inset Formula $e$
\end_inset

 que asigne a 
\begin_inset Formula $N\overline{k_{1}},P\overline{j_{1}}$
\end_inset

 los valores 
\begin_inset Formula $x_{1},\alpha_{1}$
\end_inset

 respectivamente,
 entonces independientemente de los valores que les asigne 
\begin_inset Formula $e$
\end_inset

 a las demás variables,
 se dará que:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Argument listpreamble:1
status collapsed

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
tightlist
\end_layout

\end_inset


\end_layout

\end_inset

Si 
\begin_inset Formula $(x_{1},\alpha_{1})\notin D_{P}$
\end_inset

,
 entonces 
\begin_inset Formula $[\text{IF }P(N\overline{k_{1}},P\overline{j_{1}})\text{ GOTO }L\bar{k}]$
\end_inset

 
\series bold
no
\series default
 se detiene partiendo de 
\begin_inset Formula $e$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $(x_{1},\alpha_{1})\in D_{P}$
\end_inset

 y 
\begin_inset Formula $P(x_{1},\alpha_{1})=1$
\end_inset

,
 entonces,
 luego de una cantidad finita de pasos,
 
\begin_inset Formula $[\text{IF }P(N\overline{k_{1}},P\overline{j_{1}})\text{ GOTO }L\bar{k}]$
\end_inset

 direcciona al label 
\begin_inset Formula $L\bar{k}$
\end_inset

 quedando en un estado 
\begin_inset Formula $e'$
\end_inset

 que solo puede diferir de 
\begin_inset Formula $e$
\end_inset

 en los valores que le asigna a las variables que fueron a reemplazar a las variables auxiliares de 
\begin_inset Formula $M$
\end_inset

 
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $(x_{1},\alpha_{1})\in D_{P}$
\end_inset

 y 
\begin_inset Formula $P(x_{1},\alpha_{1})=0$
\end_inset

,
 entonces,
 luego de una cantidad finita de pasos,
 
\begin_inset Formula $[\text{IF }P(N\overline{k_{1}},P\overline{j_{1}})\text{ GOTO }L\bar{k}]$
\end_inset

 se detiene partiendo de 
\begin_inset Formula $e$
\end_inset

 quedando en un estado 
\begin_inset Formula $e'$
\end_inset

 que solo puede diferir de 
\begin_inset Formula $e$
\end_inset

 en los valores que le asigna a las variables que fueron a reemplazar a las variables auxiliares de 
\begin_inset Formula $M$
\end_inset

 
\end_layout

\end_deeper
\end_deeper
\end_body
\end_document
